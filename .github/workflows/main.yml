# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: actions/checkout@v2
        uses: actions/checkout@v2
        with:
          path: develop

      - name: deploy action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          username: ${{ secrets.SSH_USERNAME }}
          script: |
            cd /home/laradock
            docker-compose exec -T --user=laradock workspace bash -c "cd /var/www/visiiime;git checkout develop"
            docker-compose exec -T --user=laradock workspace bash -c "cd /var/www/visiiime;git pull"
            docker-compose exec -T --user=laradock workspace bash -c "cd /var/www/visiiime;composer dumpautoload"
            docker-compose exec -T --user=laradock workspace bash -c "cd /var/www/visiiime;php artisan config:clear"
            docker-compose exec -T --user=laradock workspace bash -c "cd /var/www/visiiime;php artisan cache:clear"
            docker-compose exec -T --user=laradock workspace bash -c "cd /var/www/visiiime;php artisan config:cache"
  create_commit:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail
      # - shell: bash
      #   env:
      #     CLOUDFLARE_IDENTIFIER: ${{ secrets.CLOUDFLARE_IDENTIFIER }}
      #     CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
      #   run: |
      #     echo "$CLOUDFLARE_IDENTIFIER"
      #     curl -X POST https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_IDENTIFIER }}/purge_cache \
      #       -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_TOKEN }}" \
      #       -H "Content-Type: application/json" \
      #       --data '{"files":["https://dev-web.visiiime.com/js/Theme/VBasic.js"]}'
