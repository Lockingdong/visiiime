 class Particle {

    constructor(svg, coordinates, friction) {
      this.svg = svg;
      this.steps = $(window).height() / 2;
      this.item = null;
      this.friction = friction;
      this.coordinates = coordinates;
      this.position = this.coordinates.y;
      this.dimensions = this.render();
      this.rotation = Math.random() > 0.5 ? "-" : "+";
      this.scale = 0.5 + Math.random();
      this.siner = 200 * Math.random();
    }

    destroy() {
      this.item.remove();
    }

    move() {
      this.position = this.position - this.friction;
      let top = this.position;
      let left = this.coordinates.x + Math.sin(this.position * Math.PI / this.steps) * this.siner;
      this.item.css({
        transform: "translateX(" + left + "px) translateY(" + top + "px) scale(" + this.scale + ") rotate(" + this.rotation + (this.position + this.dimensions.height) + "deg)"
      });


      if (this.position < -this.dimensions.height) {
        this.destroy();
        return false;
      } else {
        return true;
      }
    }

    render() {
      this.item = $(this.svg, {
        css: {
          transform: "translateX(" + this.coordinates.x + "px) translateY(" + this.coordinates.y + "px)"
        }
      });


      $(".background").append(this.item);
      return {
        width: this.item.width(),
        height: this.item.height()
      };

    }
  }


  const rhombus = '<svg viewBox="0 0 56.96 57.12" style="enable-background:new 0 0 56.96 57.12;" xml:space="preserve"><g> 	<g> 		<g> 			<path class="st0" d="M56.96,28.6c-0.02,15.78-12.8,28.54-28.52,28.52C12.71,57.1-0.03,44.29,0,28.52 				C0.02,12.74,12.78-0.03,28.52,0C44.26,0.02,56.98,12.83,56.96,28.6z"/> 		</g> 	</g> 	<path class="st1" d="M31.96,15.31L31.96,15.31l-0.13-0.01l-11.16-0.01c-0.66,0-1.2,0.53-1.2,1.19L19.43,42.6 		c0,0.66,0.53,1.2,1.19,1.2l4.4,0.01c0.66,0,1.2-0.54,1.2-1.2l0.01-7.48c0-0.28,0.13-0.4,0.41-0.4l5.16,0.02 		c5.36,0.01,9.7-4.34,9.7-9.7C41.51,19.72,37.25,15.39,31.96,15.31z M35.14,25.09c0,0.06-0.01,0.13-0.01,0.19 		c0,0.07-0.01,0.14-0.01,0.21c-0.01,0.06-0.02,0.13-0.03,0.18c-0.01,0.07-0.03,0.13-0.04,0.21c-0.01,0.06-0.03,0.11-0.04,0.17 		c-0.02,0.07-0.04,0.13-0.06,0.2c-0.02,0.06-0.04,0.11-0.06,0.17c-0.02,0.06-0.05,0.12-0.08,0.18c-0.02,0.06-0.05,0.11-0.08,0.16 		c-0.03,0.06-0.06,0.12-0.09,0.18c-0.03,0.06-0.06,0.11-0.09,0.16c-0.04,0.06-0.07,0.11-0.11,0.16c-0.04,0.05-0.07,0.09-0.11,0.14 		c-0.04,0.05-0.08,0.1-0.13,0.15c-0.04,0.05-0.07,0.09-0.11,0.13c-0.05,0.04-0.09,0.09-0.14,0.14c-0.04,0.04-0.08,0.08-0.13,0.11 		c-0.05,0.04-0.11,0.09-0.16,0.13c-0.04,0.04-0.08,0.07-0.13,0.1c-0.06,0.04-0.11,0.08-0.17,0.11c-0.05,0.04-0.09,0.06-0.14,0.09 		c-0.06,0.04-0.13,0.06-0.19,0.1c-0.05,0.02-0.1,0.05-0.15,0.07c-0.06,0.03-0.13,0.06-0.2,0.08c-0.05,0.02-0.1,0.04-0.16,0.06 		c-0.07,0.03-0.15,0.04-0.22,0.06c-0.05,0.01-0.1,0.03-0.15,0.04c-0.08,0.01-0.17,0.03-0.25,0.04l-0.13,0.02 		c-0.13,0.01-0.26,0.02-0.4,0.03H31.3l-4.67-0.01c-0.28,0-0.62-0.26-0.62-0.55l0.01-6.75c0-0.28,0.33-0.4,0.61-0.4h0.01l4.53,0.01 		h0.13c1.76,0,3.24,1.19,3.69,2.81c0.01,0.04,0.01,0.07,0.03,0.11c0.01,0.08,0.04,0.15,0.05,0.23c0.01,0.06,0.02,0.13,0.03,0.19 		c0.01,0.06,0.01,0.12,0.02,0.18c0,0.02,0.01,0.04,0.01,0.06v0.13c0.01,0.05,0.01,0.09,0.01,0.14V25.09z"/> </g></svg>';

  const pentahedron = '<svg viewBox="0 0 56.96 57.12" style="enable-background:new 0 0 56.96 57.12;" xml:space="preserve"><g> 	<g> 		<g> 			<path class="st2" d="M56.96,28.6c-0.02,15.78-12.8,28.54-28.52,28.52C12.71,57.1-0.03,44.29,0,28.52 				C0.02,12.74,12.78-0.03,28.52,0C44.26,0.02,56.98,12.83,56.96,28.6z"/> 		</g> 	</g> 	<path class="st1" d="M31.96,15.31L31.96,15.31l-0.13-0.01l-11.16-0.01c-0.66,0-1.2,0.53-1.2,1.19L19.43,42.6 		c0,0.66,0.53,1.2,1.19,1.2l4.4,0.01c0.66,0,1.2-0.54,1.2-1.2l0.01-7.48c0-0.28,0.13-0.4,0.41-0.4l5.16,0.02 		c5.36,0.01,9.7-4.34,9.7-9.7C41.51,19.72,37.25,15.39,31.96,15.31z M35.14,25.09c0,0.06-0.01,0.13-0.01,0.19 		c0,0.07-0.01,0.14-0.01,0.21c-0.01,0.06-0.02,0.13-0.03,0.18c-0.01,0.07-0.03,0.13-0.04,0.21c-0.01,0.06-0.03,0.11-0.04,0.17 		c-0.02,0.07-0.04,0.13-0.06,0.2c-0.02,0.06-0.04,0.11-0.06,0.17c-0.02,0.06-0.05,0.12-0.08,0.18c-0.02,0.06-0.05,0.11-0.08,0.16 		c-0.03,0.06-0.06,0.12-0.09,0.18c-0.03,0.06-0.06,0.11-0.09,0.16c-0.04,0.06-0.07,0.11-0.11,0.16c-0.04,0.05-0.07,0.09-0.11,0.14 		c-0.04,0.05-0.08,0.1-0.13,0.15c-0.04,0.05-0.07,0.09-0.11,0.13c-0.05,0.04-0.09,0.09-0.14,0.14c-0.04,0.04-0.08,0.08-0.13,0.11 		c-0.05,0.04-0.11,0.09-0.16,0.13c-0.04,0.04-0.08,0.07-0.13,0.1c-0.06,0.04-0.11,0.08-0.17,0.11c-0.05,0.04-0.09,0.06-0.14,0.09 		c-0.06,0.04-0.13,0.06-0.19,0.1c-0.05,0.02-0.1,0.05-0.15,0.07c-0.06,0.03-0.13,0.06-0.2,0.08c-0.05,0.02-0.1,0.04-0.16,0.06 		c-0.07,0.03-0.15,0.04-0.22,0.06c-0.05,0.01-0.1,0.03-0.15,0.04c-0.08,0.01-0.17,0.03-0.25,0.04l-0.13,0.02 		c-0.13,0.01-0.26,0.02-0.4,0.03H31.3l-4.67-0.01c-0.28,0-0.62-0.26-0.62-0.55l0.01-6.75c0-0.28,0.33-0.4,0.61-0.4h0.01l4.53,0.01 		h0.13c1.76,0,3.24,1.19,3.69,2.81c0.01,0.04,0.01,0.07,0.03,0.11c0.01,0.08,0.04,0.15,0.05,0.23c0.01,0.06,0.02,0.13,0.03,0.19 		c0.01,0.06,0.01,0.12,0.02,0.18c0,0.02,0.01,0.04,0.01,0.06v0.13c0.01,0.05,0.01,0.09,0.01,0.14V25.09z"/> </g></svg>';
  const x = '<svg viewBox="0 0 12 12"> <path class="x" d="M10.3,4.3H7.7V1.7C7.7,0.8,7,0,6,0S4.3,0.8,4.3,1.7v2.5H1.7C0.8,4.3,0,5,0,6s0.8,1.7,1.7,1.7h2.5v2.5 C4.3,11.2,5,12,6,12s1.7-0.8,1.7-1.7V7.7h2.5C11.2,7.7,12,7,12,6S11.2,4.3,10.3,4.3z"/></svg>';

  const circle = '<svg x="0px" y="0px" viewBox="0 0 13 12"> <path class="circle" d="M6.5,0.1C3.4,0.1,0.8,2.8,0.8,6s2.6,5.9,5.7,5.9s5.7-2.7,5.7-5.9S9.7,0.1,6.5,0.1L6.5,0.1z M6.5,8.8 C5,8.8,3.8,7.6,3.8,6S5,3.2,6.5,3.2S9.2,4.4,9.2,6S8,8.8,6.5,8.8L6.5,8.8z"/> </svg>';

  const point = '<svg viewBox="0 0 12 12"> <path class="point" d="M6,7.5L6,7.5C5.1,7.5,4.5,6.9,4.5,6v0c0-0.9,0.7-1.5,1.5-1.5h0c0.9,0,1.5,0.7,1.5,1.5v0C7.5,6.9,6.9,7.5,6,7.5z "/> </svg>';

  function randomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min);
  }

  const data = [point, rhombus, pentahedron, circle, x];

  let isPaused = false;
  window.onblur = function() {
    isPaused = true;
  }.bind(this);
  window.onfocus = function() {
    isPaused = false;
  }.bind(this);

  let particles = [];

  setInterval(function() {
    if (!isPaused) {
      particles.push(
        new Particle(data[randomInt(0, data.length - 1)], {
            "x": Math.random() * $(window).width(),
            "y": $(window).height()
          },
          1 + Math.random() * 3));

    }
  }, 200);

  function update() {
    particles = particles.filter(function(p) {
      return p.move();
    });
    requestAnimationFrame(update.bind(this));
  }
  update();